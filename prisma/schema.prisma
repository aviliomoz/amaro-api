// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String @unique
  password String

  restaurants_ids String[]     @db.ObjectId
  restaurants     Restaurant[] @relation(fields: [restaurants_ids], references: [id])

  @@map("users")
}

model Restaurant {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  currency_code String  @default("USD")
  purchase_tax  Float   @default(18.00)
  sales_tax     Float   @default(18.00)
  status        Boolean @default(true)

  areas       Area[]
  categories  Category[]
  supplies    Supply[]
  subproducts Subproduct[]
  products    Product[]
  combos      Combo[]

  users_ids String[] @db.ObjectId
  users     User[]   @relation(fields: [users_ids], references: [id])

  @@map("restaurants")
}

model Area {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  name   String
  status Boolean @default(true)

  restaurant_id String     @db.ObjectId
  restaurant    Restaurant @relation(fields: [restaurant_id], references: [id])

  @@map("areas")
}

model Category {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  type   String
  name   String
  status Boolean @default(true)

  restaurant_id String     @db.ObjectId
  restaurant    Restaurant @relation(fields: [restaurant_id], references: [id])

  supplies    Supply[]
  subproducts Subproduct[]
  products    Product[]
  combos      Combo[]

  @@map("categories")
}

model Supply {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  taxable       Boolean        @default(true)
  status        Boolean        @default(true)
  presentations Presentation[]

  category_id String   @db.ObjectId
  category    Category @relation(fields: [category_id], references: [id])

  restaurant_id String     @db.ObjectId
  restaurant    Restaurant @relation(fields: [restaurant_id], references: [id])

  @@map("supplies")
}

model Presentation {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  name   String
  status Boolean @default(true)
  price  Float   @default(0.00)
  um     String

  supply_id String @db.ObjectId
  supply    Supply @relation(fields: [supply_id], references: [id])

  @@map("presentations")
}

model Subproduct {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  name   String
  um     String
  yield  Float   @default(1)
  status Boolean @default(true)

  category_id String   @db.ObjectId
  category    Category @relation(fields: [category_id], references: [id])

  restaurant_id String     @db.ObjectId
  restaurant    Restaurant @relation(fields: [restaurant_id], references: [id])

  @@map("subproducts")
}

model Product {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  name   String
  price  Float   @default(0)
  status Boolean @default(true)

  category_id String   @db.ObjectId
  category    Category @relation(fields: [category_id], references: [id])

  restaurant_id String     @db.ObjectId
  restaurant    Restaurant @relation(fields: [restaurant_id], references: [id])

  @@map("products")
}

model Combo {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  name   String
  price  Float   @default(0.00)
  status Boolean @default(true)

  category_id String   @db.ObjectId
  category    Category @relation(fields: [category_id], references: [id])

  restaurant_id String     @db.ObjectId
  restaurant    Restaurant @relation(fields: [restaurant_id], references: [id])

  @@map("combos")
}

model ProductRecipe {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  amount Float @default(0.00)
  waste Float @default(0.00)
 
}